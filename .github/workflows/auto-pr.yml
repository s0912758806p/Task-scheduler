name: Auto Pull Request
on:
  push:
    branches-ignore:
      - dev
      - main
      - release

# 全局權限設置
permissions:
  contents: write
  pull-requests: write

jobs:
  auto-pull-request:
    # 確保避免循環觸發
    if: github.event_name == 'push' && !contains(github.actor, 'bot')
    runs-on: ubuntu-latest
    steps:
      # 調試信息
      - name: Debug Information
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Ref: ${{ github.ref }}"
          echo "Ref name: ${{ github.ref_name }}"
          echo "Repository: ${{ github.repository }}"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_PAT_TOKEN }}

      # 獲取最後提交者信息
      - name: Get Last Committer
        id: last-commit
        run: |
          LAST_COMMITTER_NAME=$(git log -1 --pretty=format:'%an')
          LAST_COMMITTER_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "name=$LAST_COMMITTER_NAME" >> $GITHUB_OUTPUT
          echo "email=$LAST_COMMITTER_EMAIL" >> $GITHUB_OUTPUT
          echo "Last committer: $LAST_COMMITTER_NAME <$LAST_COMMITTER_EMAIL>"

      # 保留原始提交者身份
      - name: Configure Git
        run: |
          git config --global user.name "${{ steps.last-commit.outputs.name || github.actor }}"
          git config --global user.email "${{ steps.last-commit.outputs.email || github.actor }}@users.noreply.github.com"
          echo "Git configured with: $(git config --global user.name) <$(git config --global user.email)>"

      # 檢查是否需要創建 PR (改進檢查邏輯)
      - name: Check if PR is needed
        id: check-pr
        run: |
          # 檢查是否已有從當前分支到dev的PR
          PR_EXISTS=$(gh pr list --repo ${{ github.repository }} --head ${{ github.ref_name }} --base dev --json number --jq 'length')
          echo "Number of existing PRs: $PR_EXISTS"

          if [ "$PR_EXISTS" -gt "0" ]; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "PR already exists from ${{ github.ref_name }} to dev, skipping creation"
            
            # 獲取現有PR的URL以便於參考
            PR_URL=$(gh pr list --repo ${{ github.repository }} --head ${{ github.ref_name }} --base dev --json url --jq '.[0].url')
            echo "Existing PR: $PR_URL"
          else
            echo "pr_exists=false" >> $GITHUB_OUTPUT
            echo "No PR exists, will create one"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT_TOKEN }}

      - name: Create Pull Request
        id: open-pr
        if: steps.check-pr.outputs.pr_exists == 'false'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.BOT_PAT_TOKEN }}
          commit-message: "chore: auto PR from ${{ github.ref_name }} by ${{ steps.last-commit.outputs.name }}"
          branch: ${{ github.ref_name }}
          base: dev
          title: "feat: ${{ github.ref_name }} auto PR by ${{ steps.last-commit.outputs.name }}"
          body: |
            ## Automatic Pull Request from ${{ github.ref_name }}

            Original Author: ${{ steps.last-commit.outputs.name || github.actor }}
            Original Email: ${{ steps.last-commit.outputs.email || github.actor }}@users.noreply.github.com
            Branch: ${{ github.ref_name }}

            This PR was automatically created by the GitHub Actions workflow.
            [View commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          committer: ${{ steps.last-commit.outputs.name || github.actor }} <${{ steps.last-commit.outputs.email || github.actor }}@users.noreply.github.com>
          author: ${{ steps.last-commit.outputs.name || github.actor }} <${{ steps.last-commit.outputs.email || github.actor }}@users.noreply.github.com>
          signoff: true

      - name: Print PR Info
        if: steps.open-pr.outputs.pull-request-url
        run: |
          echo "PR successfully created!"
          echo "PR URL: ${{ steps.open-pr.outputs.pull-request-url }}"
          echo "PR Number: ${{ steps.open-pr.outputs.pull-request-number }}"

      - name: Auto-Approve Pull Request
        if: steps.open-pr.outputs.pull-request-number
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.BOT_PAT_TOKEN }}

      # 額外檢查步驟，確保PR創建者信息正確
      - name: Verify PR Author
        if: steps.open-pr.outputs.pull-request-number
        run: |
          PR_INFO=$(gh pr view ${{ steps.open-pr.outputs.pull-request-number }} --json author,title,url --repo ${{ github.repository }})
          echo "PR Info: $PR_INFO"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT_TOKEN }}
